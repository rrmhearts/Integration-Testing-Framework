from __future__ import with_statement
import glob
import os
import sys

sys.path.insert(0, '/home/vagrant/linux_setup/sikuli/examples/test_and_log')
from yattag import Doc

#
# Display a log that has been generated by running tests and logging with TestHelper.
#

log_folder = "/vagrant/log"

# Make sure the folder exists
if not os.path.exists(log_folder):
    print("Folder not found: " + log_folder + "\n")

# Make sure there is one and only one .log file in the folder
glob_result_log = glob.glob(log_folder + "/*.log")
if len(glob_result_log) < 1:
    print("No .log file found in folder: " + log_folder + "\n")
    exit(1)
elif len(glob_result_log) > 1:
    print("Multiple .log files found in folder: " + log_folder + "\n")
    exit(1)
else:
    log_file = glob_result_html[0]

# Make sure there is one and only one .css file in the folder
glob_result_css = glob.glob(log_folder + "/*.css")
if len(glob_result_css) < 1:
    print("No css file found in folder: " + log_folder + "\n")
    exit(1)
elif len(glob_result_html) > 1:
    print("Multiple css files found in folder: " + log_folder + "\n")
    exit(1)
else:
    css_file = glob_result_css[0]

# Build the html log
with open("log.html", "w") as html_file:
    doc, tag, text = Doc().tagtext()
    doc.asis('<!DOCTYPE html>')

    with tag("html", lang="en_us"):
        with tag("head"):
            with tag("title"):
                text("Test page")
            doc.stag("link", href=css_file, rel="stylesheet", type="text/css")
        with tag("body"):
            with tag("table"):
                with tag("tr"):
                    with tag("th"):
                        text("Test name")
                    with tag("th"):
                        text("Action")
                    with tag("th"):
                        text("Expected")
                    with tag("th"):
                        text("Screenshot")

                # Add in the .log file, which should contain table rows
                with open(log_file, "r") as f:
                    doc.asis(f.read())

    # Write the html document to the file
    html_file.write(doc.getvalue())
